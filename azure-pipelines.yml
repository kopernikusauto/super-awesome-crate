strategy:
  matrix:
    # windows:
    #   image_name: windows-2019
    linux:
      image_name: ubuntu-20.04

# trigger on every commit in main and every stages:
# the tag is necessary otherwise it doesn't trigger on any tag
trigger:
  branches:
    include: ['master']
  tags:
    include: ['*']

# trigger on every pull request to main
pr:
  - master

pool:
  vmImage: $(image_name)

steps:
  - script: |
      cargo build --all --target=x86_64-unknown-linux-gnu
      cargo build --all --target=x86_64-unknown-linux-gnu --release
    displayName: Cargo build
  - script: cargo test --all
    displayName: Cargo test
  - script: cargo clippy --all
    displayName: Cargo clippy
  - script: |
      rustup target add x86_64-pc-windows-msvc
      cargo build --target=x86_64-pc-windows-msvc
      cargo build --target=x86_64-pc-windows-msvc --release
    displayName: Cargo x86_64-pc-windows-msvc build
  - script: |
      rustup target add aarch64-unknown-linux-gnu
      cargo build --target=aarch64-unknown-linux-gnu --release
    displayName: Cargo aarch64-unknown-linux-gnu build
  # - script: |
  #     rustup target add aarch64-unknown-none
  #     cargo build --target=aarch64-unknown-none --release
  #   displayName: Cargo aarch64-unknown-none build
  - task: CopyFiles@2
    displayName: Copy builds
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/target/'
      contents: |
        x86_64-unknown-linux-gnu/debug/libsuper_awesome_crate.a 
        x86_64-unknown-linux-gnu/release/libsuper_awesome_crate.a 
        x86_64-pc-windows-msvc/debug/super_awesome_crate.lib 
        x86_64-pc-windows-msvc/release/super_awesome_crate.lib
        aarch64-unknown-linux-gnu/release/libsuper_awesome_crate.a
        aarch64-unknown-none/release/libsuper_awesome_crate.a
      targetFolder: '$(Build.BinariesDirectory)'
  - task: ArchiveFiles@2
    displayName: x86_64-unknown-linux-gnu build archive
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)/x86_64-unknown-linux-gnu'
      archiveType: 'tar'
      tarCompression: 'gz'
      archiveFile: '$(Build.ArtifactStagingDirectory)/super-awesome-crate-$(Build.SourceBranchName)-linux-amd64.tar.gz'
  - task: ArchiveFiles@2
    displayName: x86_64-pc-windows-msvc build archive
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)/x86_64-pc-windows-msvc'
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/super-awesome-crate-$(Build.SourceBranchName)-windows-amd64.zip'
  - task: ArchiveFiles@2
    displayName: aarch64-unknown-linux-gnu build archive
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)/aarch64-unknown-linux-gnu/release'
      archiveType: 'tar'
      tarCompression: 'gz'
      archiveFile: '$(Build.ArtifactStagingDirectory)/super-awesome-crate-$(Build.SourceBranchName)-linux-aarch64.tar.gz'
  # - task: ArchiveFiles@2
  #   displayName: aarch64-unknown-none build archive
  #   inputs:
  #     rootFolderOrFile: '$(Build.BinariesDirectory)/aarch64-unknown-none/release'
  #     archiveType: 'tar'
  #     tarCompression: 'gz'
  #     archiveFile: '$(Build.ArtifactStagingDirectory)/super-awesome-crate-$(Build.SourceBranchName)-aarch64.tar.gz'
  - task: GitHubRelease@0
    displayName: 'GitHub release'
    inputs:
      gitHubConnection: 'imgeorgiev'
      repositoryName: '$(Build.Repository.Name)'
      action: 'edit'
      target: '$(build.sourceVersion)'
      tagPattern: 'v*.*.*'
      tag: '$(Build.SourceBranchName)'
      assets: '$(Build.ArtifactStagingDirectory)/*'
      title: '$(Build.SourceBranchName)'
      assetUploadMode: 'replace'
      addChangeLog: true
